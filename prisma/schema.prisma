generator client{
    provider="prisma-client-js"
}

datasource db{
    provider="postgresql"
    url=env("DATABASE_URL")
    directUrl= env("DIRECT_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  emailVerified Boolean  @default(false)
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sessions Session[]
  account Account?
}

model Session {
  id         String   @id @default(uuid())
  userId     String
  expiresAt  DateTime
  ipAddress  String
  userAgent  String

  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Account {
  id           String   @id @default(uuid())
  userId       String @unique
  accountId    String
  providerId   String
  accessToken  String?
  refreshToken String?
  expiresAt    DateTime?
  password     String?

  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([providerId, accountId], name: "providerAccountIndex")
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime

  @@index([identifier])
}

model Issue{
  id String @id @default(uuid())

  collectionId String?
  collection Collection? @relation(fields: [collectionId],references: [id])

  name String
  thumbnailUrl String
  downloadUrl String

  dateCreated DateTime @default(now())
  dateUpdated DateTime @default(now())
  dateReleased DateTime
}

model Collection{
  id String @id @default(uuid())

  name String
  issues Issue[]

  dateCreated DateTime @default(now())
  dateUpdated DateTime @default(now())
}